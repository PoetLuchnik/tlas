#ifndef KEYWORDS_INCLUDED
#define KEYWORDS_INCLUDED

typedef enum {
	// registers
	TLAS_KW_REG_A,
	TLAS_KW_REG_D,
	TLAS_KW_REG_F,
	TLAS_KW_REG_I,
	TLAS_KW_REG_K,
	TLAS_KW_REG_O,
	TLAS_KW_REG_P,
	TLAS_KW_REG_S,
	// address registers
	TLAS_KW_AT_A,
	TLAS_KW_AT_D,
	TLAS_KW_AT_K,
	TLAS_KW_AT_P,
	// address address registers
	TLAS_KW_AT_AT_A,
	TLAS_KW_AT_AT_D,
	TLAS_KW_AT_AT_K,
	TLAS_KW_AT_AT_P,
	// flags
	TLAS_KW_FLAG_Z,
	TLAS_KW_FLAG_C,
	TLAS_KW_FLAG_N,
	TLAS_KW_FLAG_O,
	TLAS_KW_FLAG_I,
	TLAS_KW_FLAG_B,
	TLAS_KW_FLAG_S,
	TLAS_KW_FLAG_U,
	// instructions
	TLAS_KW_ADD,
	TLAS_KW_ADD_CARRY,
	TLAS_KW_BITWISE_AND,
	TLAS_KW_BITWISE_NOR,
	TLAS_KW_BITWISE_NOT,
	TLAS_KW_BITWISE_OR,
	TLAS_KW_BITWISE_XOR,
	TLAS_KW_BREAK,
	TLAS_KW_CALL,
	TLAS_KW_COMPARE,
	TLAS_KW_DECREMENT,
	TLAS_KW_HALT,
	TLAS_KW_IN,
	TLAS_KW_INCREMENT,
	TLAS_KW_INTRET,
	TLAS_KW_JUMP,
	TLAS_KW_JUMP_IF,
	TLAS_KW_LOOP,
	TLAS_KW_MOVE,
	TLAS_KW_NEGATIVE,
	TLAS_KW_NOPE,
	TLAS_KW_OUT,
	TLAS_KW_PEEK,
	TLAS_KW_POP,
	TLAS_KW_POP_ALL,
	TLAS_KW_PUSH,
	TLAS_KW_PUSH_ALL,
	TLAS_KW_SET_FLAG,
	TLAS_KW_SHIFT_LEFT,
	TLAS_KW_SHIFT_LEFT_CARRY,
	TLAS_KW_SHIFT_RIGHT,
	TLAS_KW_SHIFT_RIGHT_CARRY,
	TLAS_KW_SUB,
	TLAS_KW_SUB_CARRY,
	TLAS_KW_SWAP,
	TLAS_KW_TEST,
	// pseudo-instructions
	TLAS_KW_DEF_BYTES,
	TLAS_KW_RES_BYTES,
	TLAS_KW_INCLUDE_BIN,
	TLAS_KW_INCLUDE_ASM,
	TLAS_KW_MACRO_BEGIN,
	TLAS_KW_MACRO_END,
	TLAS_KW_MACRO_REMOVE,
	// values
	TLAS_KW_TRUE,
	TLAS_KW_FALSE,
	TLAS_KW_ABS_POS,
	TLAS_KW_REL_POS,
	// const operators
	TLAS_KW_OP_ADD,
	TLAS_KW_OP_SUB,
	TLAS_KW_OP_MUL,
	TLAS_KW_OP_DIV,
	TLAS_KW_OP_MOD,
	TLAS_KW_OP_AND,
	TLAS_KW_OP_OR,
	TLAS_KW_OP_XOR,
	TLAS_KW_OP_NOT,
	TLAS_KW_OP_SHIFTL,
	TLAS_KW_OP_SHIFTR,

	TLAS_KW_COUNT,
} keyword_t;

extern const char* tlas_kw[];

#endif
